/* Source: leetCode, March LeetCoding Challenge 2021

Prompt:
Given a string s consisting only of letters 'a' and 'b'. In a single step you can remove one palindromic subsequence from s.

Return the minimum number of steps to make the given string empty.

A string is a subsequence of a given string, if it is generated by deleting some characters of a given string without changing its order.

A string is called palindrome if is one that reads the same backward as well as forward.



Example 1:

Input: s = "ababa"
Output: 1
Explanation: String is already palindrome
Example 2:

Input: s = "abb"
Output: 2
Explanation: "abb" -> "bb" -> "".
Remove palindromic subsequence "a" then "bb".
Example 3:

Input: s = "baabb"
Output: 2
Explanation: "baabb" -> "b" -> "".
Remove palindromic subsequence "baab" then "b".
Example 4:

Input: s = ""
Output: 0


Constraints:

0 <= s.length <= 1000
s only consists of letters 'a' and 'b'
/**
 * @param {string} s
 * @return {number}
 */
var removePalindromeSub = function (s) {
  // create a function that finds a palindrome
  if (!s.length) return 0;
  if (isPalindrome(s)) return 1;
  return 2;
};

const isPalindrome = (s) => {
  let left = 0;
  let right = s.length - 1;

  while (left < right) {
    if (s.charAt(left) !== s.charAt(right)) return false;
    left += 1;
    right -= 1;
  }
  return true;
};

/* Time Complexity: O(n) - linear
  space Complexity: O(1) - constant
  if the string had been reversed and compared to itself the space
  complexity would be O(n) since we are storing a copy of it but in reverse.
*/
